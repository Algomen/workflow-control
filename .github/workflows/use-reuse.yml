name: Using reusable workflow
on:
  push:
    branches:
      - main
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v5
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: ./node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Lint code
        run: npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v5
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: ./node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Test code
        id: test
        run: npm run test
      - name: Upload test report
        if: failure() && steps.test.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v5
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: ./node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Build website
        id: build-website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: dist
  deploy:
    needs: build
    uses: ./.github/workflows/reusable.yml
    with:
      artifact-name: 'dist-files'
    # secrets:
    #   DEPLOYMENT_KEY: ${{ secrets.DEPLOYMENT_KEY }}
  print-deploy-result:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Output deployment result
        run: |
          echo "Deployment result: ${{ needs.deploy.outputs.result }}"
  report:
    if: failure()
    needs: [lint, deploy]
    runs-on: ubuntu-latest
    steps:
      - name: Output information
        run: |
          echo "Something went wrong!"
          echo "${{ toJSON(github) }}"
          echo "Lint job status: ${{ needs.lint.result }}"
          echo "Test job status: ${{ needs.test.result }}"
          echo "Build job status: ${{ needs.build.result }}"
          echo "Deploy job status: ${{ needs.deploy.result }}"
